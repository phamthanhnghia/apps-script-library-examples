/**
 * @description This script demonstrates a complete workflow for creating a complex Google Doc report from scratch.
 * It combines many common DocumentApp features into a single, practical example.
 */
function buildReportDocument() {
  try {
    // --- 1. Create a New Document ---
    const docName = `Quarterly Report - ${new Date().toLocaleDateString()}`;
    const doc = DocumentApp.create(docName);
    const body = doc.getBody();
    Logger.log(`Created new document: "${docName}"`);
    Logger.log(`Document URL: ${doc.getUrl()}`);

    // --- 2. Insert Headers and Footers ---
    const header = doc.addHeader();
    header.appendParagraph('Confidential - For Internal Use Only');
    const footer = doc.addFooter();
    footer.appendParagraph('Page ').appendPageNumber().appendParagraph(' | Generated by Apps Script');
    
    // --- 3. Add and Format a Title ---
    const title = body.appendParagraph('Quarterly Sales Report');
    title.setHeading(DocumentApp.ParagraphHeading.TITLE);
    body.appendParagraph(`Report generated on: ${new Date().toLocaleString()}`);
    body.appendHorizontalRule();

    // --- 4. Append Formatted Text ---
    const intro = body.appendParagraph('This report summarizes the sales performance for the last quarter. The data shows a positive trend in all key areas. PLACEHOLDER_TEXT');
    intro.editAsText().setFontSize(12);

    // --- 5. Append a List ---
    body.appendParagraph('\nKey Highlights:').setHeading(DocumentApp.ParagraphHeading.HEADING2);
    body.appendListItem('Revenue increased by 15%').setGlyphType(DocumentApp.GlyphType.SQUARE_BULLET);
    body.appendListItem('New customer acquisition up by 22%').setGlyphType(DocumentApp.GlyphType.SQUARE_BULLET);
    body.appendListItem('Product "X" was the top seller').setGlyphType(DocumentApp.GlyphType.SQUARE_BULLET);

    // --- 6. Insert a Table ---
    body.appendParagraph('\nSales by Region:').setHeading(DocumentApp.ParagraphHeading.HEADING2);
    const tableData = [
      ['Region', 'Sales', 'Change'],
      ['North America', '$500,000', '+12%'],
      ['Europe', '$320,000', '+18%'],
      ['Asia', '$210,000', '+25%']
    ];
    const table = body.appendTable(tableData);
    // Format the header row of the table
    const headerRow = table.getRow(0);
    headerRow.editAsText().setBold(true);
    headerRow.getCell(0).setBackgroundColor('#d9d9d9');
    headerRow.getCell(1).setBackgroundColor('#d9d9d9');
    headerRow.getCell(2).setBackgroundColor('#d9d9d9');

    // --- 7. Find and Replace Text ---
    body.replaceText('PLACEHOLDER_TEXT', 'Further details are provided below.');
    Logger.log('Replaced placeholder text.');

    // --- 8. Add a Hyperlink ---
    const conclusion = body.appendParagraph('\nFor more details, please visit the official sales dashboard.');
    // Find the text "sales dashboard" and link it.
    const linkText = conclusion.findText('sales dashboard');
    if (linkText) {
      linkText.getElement().asText().setLinkUrl(linkText.getStartOffset(), linkText.getEndOffsetInclusive(), 'https://www.google.com/search?q=sales+dashboard');
      Logger.log('Added hyperlink.');
    }

    // --- 9. Save the Document as a PDF ---
    doc.saveAndClose(); // Recommended before getting the blob
    const pdfBlob = doc.getAs('application/pdf');
    
    // Get the parent folder of the doc to save the PDF in the same place
    const parentFolder = DriveApp.getFileById(doc.getId()).getParents().next();
    const pdfFile = parentFolder.createFile(pdfBlob).setName(`${docName}.pdf`);
    Logger.log(`Saved PDF version: ${pdfFile.getUrl()}`);

    // --- 10. Cleanup Instructions ---
    Logger.log(`\nWorkflow complete. The new files are located in the folder: "${parentFolder.getName()}"`);

  } catch (e) {
    Logger.log(`An error occurred: ${e.toString()}`);
    Logger.log(`Stack: ${e.stack}`);
  }
}
